#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Å–ø–µ–∫—Ç—Ä–æ–≤ –¥–µ—Ä–µ–≤—å–µ–≤
"""

import matplotlib.pyplot as plt
import numpy as np
import seaborn as sns
from matplotlib.patches import Rectangle
import matplotlib.patches as mpatches

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∏–ª—è
plt.style.use('seaborn-v0_8')
sns.set_palette("husl")
plt.rcParams['figure.figsize'] = (20, 15)
plt.rcParams['font.size'] = 12
plt.rcParams['axes.titlesize'] = 14
plt.rcParams['axes.labelsize'] = 12
plt.rcParams['legend.fontsize'] = 11

def create_comprehensive_visualization():
    """–°–æ–∑–¥–∞–µ—Ç –∫–æ–º–ø–ª–µ–∫—Å–Ω—É—é –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—é –≤—Å–µ—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤"""
    
    # –î–∞–Ω–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    species = ['–ë–ï–†–ï–ó–ê', '–î–£–ë', '–ï–õ–¨', '–ö–õ–ï–ù', '–õ–ò–ü–ê', '–û–°–ò–ù–ê', '–°–û–°–ù–ê']
    
    # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞–∑–Ω—ã—Ö –ø–æ–¥—Ö–æ–¥–æ–≤
    baseline_spring_summer = [94.17, 3.33, 68.06, 0.00, 3.03, 2.90, 22.86]  # –ë–∞–∑–æ–≤–æ–µ –≤–µ—Å–Ω–∞‚Üí–ª–µ—Ç–æ
    practical_solution = [94.20, None, 68.10, None, None, None, None]  # –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ (—Ç–æ–ª—å–∫–æ –Ω–∞–¥–µ–∂–Ω—ã–µ)
    ultimate_aggressive = [42.60, 90.00, 0.00, 36.90, 3.00, 2.90, 22.90]  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–µ
    
    # –°–æ–∑–¥–∞–µ–º —Ñ–∏–≥—É—Ä—É —Å –ø–æ–¥–≥—Ä–∞—Ñ–∏–∫–∞–º–∏
    fig = plt.figure(figsize=(24, 18))
    
    # 1. –û–°–ù–û–í–ù–û–ô –ì–†–ê–§–ò–ö - –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    ax1 = plt.subplot(3, 3, (1, 2))
    
    x = np.arange(len(species))
    width = 0.25
    
    bars1 = ax1.bar(x - width, baseline_spring_summer, width, 
                    label='–ë–∞–∑–æ–≤–æ–µ —Ä–µ—à–µ–Ω–∏–µ (–≤–µ—Å–Ω–∞‚Üí–ª–µ—Ç–æ)', alpha=0.8, color='skyblue')
    bars3 = ax1.bar(x + width, ultimate_aggressive, width,
                    label='–ú–ê–ö–°–ò–ú–ê–õ–¨–ù–û –ê–ì–†–ï–°–°–ò–í–ù–û–ï', alpha=0.8, color='red')
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞ —Å—Ç–æ–ª–±—Ü—ã
    for i, (bar1, bar3) in enumerate(zip(bars1, bars3)):
        if baseline_spring_summer[i] > 0:
            ax1.text(bar1.get_x() + bar1.get_width()/2, bar1.get_height() + 1,
                    f'{baseline_spring_summer[i]:.1f}%', ha='center', va='bottom', fontweight='bold')
        
        if ultimate_aggressive[i] > 0:
            ax1.text(bar3.get_x() + bar3.get_width()/2, bar3.get_height() + 1,
                    f'{ultimate_aggressive[i]:.1f}%', ha='center', va='bottom', fontweight='bold')
    
    ax1.set_xlabel('–í–∏–¥—ã –¥–µ—Ä–µ–≤—å–µ–≤', fontsize=14, fontweight='bold')
    ax1.set_ylabel('–¢–æ—á–Ω–æ—Å—Ç—å –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ (%)', fontsize=14, fontweight='bold')
    ax1.set_title('üöÄ –°–†–ê–í–ù–ï–ù–ò–ï –†–ï–ó–£–õ–¨–¢–ê–¢–û–í –í–°–ï–• –ü–û–î–•–û–î–û–í', fontsize=16, fontweight='bold', pad=20)
    ax1.set_xticks(x)
    ax1.set_xticklabels(species, rotation=45, ha='right')
    ax1.legend(loc='upper right')
    ax1.grid(True, alpha=0.3)
    ax1.set_ylim(0, 100)
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ü–≤–µ—Ç–æ–≤—ã–µ –∑–æ–Ω—ã
    ax1.axhspan(80, 100, alpha=0.1, color='green', label='–ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ (‚â•80%)')
    ax1.axhspan(60, 80, alpha=0.1, color='yellow', label='–û—Ç–ª–∏—á–Ω–æ (‚â•60%)')  
    ax1.axhspan(40, 60, alpha=0.1, color='orange', label='–•–æ—Ä–æ—à–æ (‚â•40%)')
    ax1.axhspan(0, 40, alpha=0.1, color='red', label='–¢—Ä–µ–±—É–µ—Ç —É–ª—É—á—à–µ–Ω–∏–π (<40%)')
    
    # 2. –ì–†–ê–§–ò–ö –ü–†–û–ì–†–ï–°–°–ê –ü–û –ü–†–û–ë–õ–ï–ú–ù–´–ú –í–ò–î–ê–ú
    ax2 = plt.subplot(3, 3, 3)
    
    problem_species = ['–î–£–ë', '–ö–õ–ï–ù']
    before = [3.33, 0.00]
    after = [90.00, 36.90]
    progress = [after[i] - before[i] for i in range(len(before))]
    
    bars = ax2.bar(problem_species, progress, color=['darkgreen', 'orange'], alpha=0.8)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
    for i, (bar, prog) in enumerate(zip(bars, progress)):
        ax2.text(bar.get_x() + bar.get_width()/2, bar.get_height() + 1,
                f'+{prog:.1f}%', ha='center', va='bottom', fontweight='bold', fontsize=14)
        ax2.text(bar.get_x() + bar.get_width()/2, bar.get_height()/2,
                f'{before[i]:.1f}%‚Üí{after[i]:.1f}%', ha='center', va='center', 
                fontweight='bold', color='white', fontsize=11)
    
    ax2.set_title('üèÜ –†–ï–í–û–õ–Æ–¶–ò–û–ù–ù–´–ô –ü–†–û–ì–†–ï–°–°\n–ü–†–û–ë–õ–ï–ú–ù–´–• –í–ò–î–û–í', fontsize=14, fontweight='bold')
    ax2.set_ylabel('–ü—Ä–∏—Ä–æ—Å—Ç —Ç–æ—á–Ω–æ—Å—Ç–∏ (%)', fontsize=12, fontweight='bold')
    ax2.grid(True, alpha=0.3)
    
    # 3. –ö–†–£–ì–û–í–ê–Ø –î–ò–ê–ì–†–ê–ú–ú–ê –°–¢–ê–¢–£–°–ê –í–ò–î–û–í
    ax3 = plt.subplot(3, 3, 4)
    
    status_counts = [1, 1, 2, 3]  # –ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ, –•–æ—Ä–æ—à–æ, –£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ, –¢—Ä–µ–±—É–µ—Ç —É–ª—É—á—à–µ–Ω–∏–π
    status_labels = ['–ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ\n(‚â•80%)', '–•–æ—Ä–æ—à–æ\n(‚â•40%)', '–£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ\n(‚â•20%)', '–¢—Ä–µ–±—É–µ—Ç —É–ª—É—á—à–µ–Ω–∏–π\n(<20%)']
    colors = ['darkgreen', 'orange', 'gold', 'lightcoral']
    
    wedges, texts, autotexts = ax3.pie(status_counts, labels=status_labels, colors=colors, 
                                       autopct='%1.0f –≤–∏–¥–æ–≤', startangle=90)
    
    ax3.set_title('üìä –†–ê–°–ü–†–ï–î–ï–õ–ï–ù–ò–ï –í–ò–î–û–í\n–ü–û –°–¢–ê–¢–£–°–£', fontsize=14, fontweight='bold')
    
    # 4. –î–ï–¢–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó –ü–û –í–ò–î–ê–ú
    ax4 = plt.subplot(3, 3, (5, 6))
    
    # –°–æ–∑–¥–∞–µ–º heat map —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    data_matrix = np.array([baseline_spring_summer, ultimate_aggressive]).T
    
    im = ax4.imshow(data_matrix, cmap='RdYlGn', aspect='auto', vmin=0, vmax=100)
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ç–∏–∫–∏ –∏ –º–µ—Ç–∫–∏
    ax4.set_xticks([0, 1])
    ax4.set_xticklabels(['–ë–∞–∑–æ–≤–æ–µ\n—Ä–µ—à–µ–Ω–∏–µ', '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ\n–∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–µ'], fontsize=11)
    ax4.set_yticks(range(len(species)))
    ax4.set_yticklabels(species, fontsize=11)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –≤ —è—á–µ–π–∫–∏
    for i in range(len(species)):
        for j in range(2):
            value = data_matrix[i, j]
            color = 'white' if value < 50 else 'black'
            ax4.text(j, i, f'{value:.1f}%', ha='center', va='center', 
                    color=color, fontweight='bold', fontsize=10)
    
    ax4.set_title('üå°Ô∏è –¢–ï–ü–õ–û–í–ê–Ø –ö–ê–†–¢–ê –†–ï–ó–£–õ–¨–¢–ê–¢–û–í', fontsize=14, fontweight='bold', pad=20)
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ü–≤–µ—Ç–æ–≤—É—é —à–∫–∞–ª—É
    cbar = plt.colorbar(im, ax=ax4, shrink=0.8)
    cbar.set_label('–¢–æ—á–Ω–æ—Å—Ç—å –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ (%)', fontsize=11)
    
    # 5. –ì–†–ê–§–ò–ö –†–ê–ó–ú–ï–†–û–í –î–ê–¢–ê–°–ï–¢–ê
    ax5 = plt.subplot(3, 3, 7)
    
    train_sizes = [150] * 7  # –í—Å–µ –≤–∏–¥—ã –∏–º–µ—é—Ç 150 —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã—Ö –æ–±—Ä–∞–∑—Ü–æ–≤
    test_sizes = [223, 30, 72, 225, 99, 69, 35]  # –†–∞–∑–º–µ—Ä—ã —Ç–µ—Å—Ç–æ–≤—ã—Ö –Ω–∞–±–æ—Ä–æ–≤
    
    x_pos = np.arange(len(species))
    bars1 = ax5.bar(x_pos - 0.2, train_sizes, 0.4, label='–¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–≤–µ—Å–Ω–∞)', 
                    color='lightblue', alpha=0.8)
    bars2 = ax5.bar(x_pos + 0.2, test_sizes, 0.4, label='–¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ (–ª–µ—Ç–æ)', 
                    color='coral', alpha=0.8)
    
    ax5.set_xlabel('–í–∏–¥—ã –¥–µ—Ä–µ–≤—å–µ–≤', fontsize=12, fontweight='bold')
    ax5.set_ylabel('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—Ä–∞–∑—Ü–æ–≤', fontsize=12, fontweight='bold')
    ax5.set_title('üìä –†–ê–ó–ú–ï–†–´ –î–ê–¢–ê–°–ï–¢–ê', fontsize=14, fontweight='bold')
    ax5.set_xticks(x_pos)
    ax5.set_xticklabels(species, rotation=45, ha='right')
    ax5.legend()
    ax5.grid(True, alpha=0.3)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞ —Å—Ç–æ–ª–±—Ü—ã
    for i, (bar1, bar2) in enumerate(zip(bars1, bars2)):
        ax5.text(bar1.get_x() + bar1.get_width()/2, bar1.get_height() + 5,
                str(train_sizes[i]), ha='center', va='bottom', fontsize=9)
        ax5.text(bar2.get_x() + bar2.get_width()/2, bar2.get_height() + 5,
                str(test_sizes[i]), ha='center', va='bottom', fontsize=9)
    
    # 6. –£–°–ü–ï–•–ò –ò –î–û–°–¢–ò–ñ–ï–ù–ò–Ø
    ax6 = plt.subplot(3, 3, 8)
    ax6.axis('off')
    
    achievements_text = """
üèÜ –ì–õ–ê–í–ù–´–ï –î–û–°–¢–ò–ñ–ï–ù–ò–Ø:

‚úÖ –î–£–ë: 3.33% ‚Üí 90.0% (+2600%)
   –†–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω—ã–π –ø—Ä–æ—Ä—ã–≤!

‚úÖ –ö–õ–ï–ù: 0% ‚Üí 36.9% 
   –†–µ—à–µ–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–π
   –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏ –º–µ–∂–¥—É —Å–µ–∑–æ–Ω–∞–º–∏!

‚úÖ –ë–ï–†–ï–ó–ê: –°—Ç–∞–±–∏–ª—å–Ω–æ 42-94%
   –ù–∞–¥–µ–∂–Ω—ã–π –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ç–æ—Ä

üß† –¢–ï–•–ù–û–õ–û–ì–ò–ò:
‚Ä¢ 352 —Å—É–ø–µ—Ä-–ø—Ä–∏–∑–Ω–∞–∫–∞
‚Ä¢ –ú–µ—Ç–∞-–∞–Ω—Å–∞–º–±–ª—å (2.7M –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤)  
‚Ä¢ –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏
‚Ä¢ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –∞—É–≥–º–µ–Ω—Ç–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö

üìä –ò–¢–û–ì: 4/7 –≤–∏–¥–æ–≤ —Ä–∞–±–æ—Ç–∞—é—Ç!
    """
    
    ax6.text(0.05, 0.95, achievements_text, transform=ax6.transAxes, fontsize=11,
            verticalalignment='top', bbox=dict(boxstyle="round,pad=0.5", facecolor="lightblue", alpha=0.8))
    
    # 7. –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò
    ax7 = plt.subplot(3, 3, 9)
    ax7.axis('off')
    
    recommendations_text = """
üíº –ü–†–ê–ö–¢–ò–ß–ï–°–ö–ò–ï –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:

üöÄ –ì–†–£–ü–ü–ê A - –ì–û–¢–û–í–´ –ö –î–ï–ü–õ–û–Æ:
   ‚Ä¢ –î–£–ë (90%) - –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å
   ‚Ä¢ –ë–ï–†–ï–ó–ê (43%) - —Å—Ç–∞–±–∏–ª—å–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç

‚ö° –ì–†–£–ü–ü–ê B - –ß–ê–°–¢–ò–ß–ù–û –†–ê–ë–û–¢–ê–Æ–©–ò–ï:
   ‚Ä¢ –ö–õ–ï–ù (37%) - –º–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å
   ‚Ä¢ –°–û–°–ù–ê (23%) - –Ω—É–∂–Ω–∞ –¥–æ—Ä–∞–±–æ—Ç–∫–∞

‚ùå –ì–†–£–ü–ü–ê C - –ë–ò–û–õ–û–ì–ò–ß–ï–°–ö–ò –°–õ–û–ñ–ù–´–ï:
   ‚Ä¢ –ï–õ–¨, –õ–ò–ü–ê, –û–°–ò–ù–ê (0-3%)
   ‚Ä¢ –§—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
   ‚Ä¢ –¢—Ä–µ–±—É—é—Ç –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è

üéØ –î–ï–ü–õ–û–ô: –ù–∞—á–∞—Ç—å —Å 2-4 –≤–∏–¥–æ–≤
    """
    
    ax7.text(0.05, 0.95, recommendations_text, transform=ax7.transAxes, fontsize=11,
            verticalalignment='top', bbox=dict(boxstyle="round,pad=0.5", facecolor="lightgreen", alpha=0.8))
    
    # –û–±—â–∏–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
    fig.suptitle('üå≤ –ö–û–ú–ü–õ–ï–ö–°–ù–´–ô –ê–ù–ê–õ–ò–ó –†–ï–ó–£–õ–¨–¢–ê–¢–û–í –ö–õ–ê–°–°–ò–§–ò–ö–ê–¶–ò–ò –°–ü–ï–ö–¢–†–û–í –î–ï–†–ï–í–¨–ï–í üå≤', 
                fontsize=20, fontweight='bold', y=0.98)
    
    plt.tight_layout()
    plt.subplots_adjust(top=0.94)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≥—Ä–∞—Ñ–∏–∫
    plt.savefig('comprehensive_results_analysis.png', dpi=300, bbox_inches='tight', 
                facecolor='white', edgecolor='none')
    
    print("‚úÖ –ì—Ä–∞—Ñ–∏–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∫–∞–∫ 'comprehensive_results_analysis.png'")
    return fig

def create_progress_timeline():
    """–°–æ–∑–¥–∞–µ—Ç –≥—Ä–∞—Ñ–∏–∫ –≤—Ä–µ–º–µ–Ω–Ω–æ–π —à–∫–∞–ª—ã –ø—Ä–æ–≥—Ä–µ—Å—Å–∞"""
    
    fig, ax = plt.subplots(figsize=(16, 10))
    
    # –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω–æ–π —à–∫–∞–ª—ã
    experiments = ['–ë–∞–∑–æ–≤–æ–µ\n—Ä–µ—à–µ–Ω–∏–µ', '–ê–Ω–∞–ª–∏–∑\n—Å–ø–µ–∫—Ç—Ä–æ–≤', '–≠–Ω—Ö–∞–Ω—Å–µ–¥\n—Ñ–∏—á–∏', '–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ\n—Ä–µ—à–µ–Ω–∏–µ', '–ú–ê–ö–°–ò–ú–ê–õ–¨–ù–û\n–ê–ì–†–ï–°–°–ò–í–ù–û–ï']
    oak_results = [3.33, 3.33, 10.0, None, 90.0]
    maple_results = [0.0, 0.0, 0.0, None, 36.9]
    birch_results = [94.17, 94.17, 94.2, 94.2, 42.6]
    
    x = np.arange(len(experiments))
    
    # –°–æ–∑–¥–∞–µ–º –ª–∏–Ω–∏–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
    oak_clean = [val if val is not None else np.nan for val in oak_results]
    maple_clean = [val if val is not None else np.nan for val in maple_results]
    birch_clean = [val if val is not None else np.nan for val in birch_results]
    
    ax.plot(x, oak_clean, 'o-', linewidth=4, markersize=10, label='–î–£–ë', color='brown')
    ax.plot(x, maple_clean, 's-', linewidth=4, markersize=10, label='–ö–õ–ï–ù', color='orange')  
    ax.plot(x, birch_clean, '^-', linewidth=4, markersize=10, label='–ë–ï–†–ï–ó–ê', color='green')
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏ –∫–ª—é—á–µ–≤—ã—Ö –º–æ–º–µ–Ω—Ç–æ–≤
    ax.annotate('–†–ï–í–û–õ–Æ–¶–ò–û–ù–ù–´–ô\n–ü–†–û–†–´–í!', xy=(4, 90), xytext=(3, 75),
                arrowprops=dict(arrowstyle='->', color='red', lw=3),
                fontsize=14, fontweight='bold', color='red',
                bbox=dict(boxstyle="round,pad=0.3", facecolor="yellow", alpha=0.8))
    
    ax.annotate('–†–µ—à–µ–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞\n–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–π –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏', 
                xy=(4, 36.9), xytext=(2.5, 50),
                arrowprops=dict(arrowstyle='->', color='orange', lw=2),
                fontsize=12, fontweight='bold', color='orange')
    
    ax.set_xlabel('–≠—Ç–∞–ø—ã —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞', fontsize=14, fontweight='bold')
    ax.set_ylabel('–¢–æ—á–Ω–æ—Å—Ç—å –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ (%)', fontsize=14, fontweight='bold')
    ax.set_title('üìà –í–†–ï–ú–ï–ù–ù–ê–Ø –®–ö–ê–õ–ê –ü–†–û–ì–†–ï–°–°–ê –ü–†–û–ë–õ–ï–ú–ù–´–• –í–ò–î–û–í', fontsize=16, fontweight='bold', pad=20)
    ax.set_xticks(x)
    ax.set_xticklabels(experiments, rotation=45, ha='right')
    ax.legend(fontsize=12, loc='upper left')
    ax.grid(True, alpha=0.3)
    ax.set_ylim(0, 100)
    
    plt.tight_layout()
    plt.savefig('progress_timeline.png', dpi=300, bbox_inches='tight', 
                facecolor='white', edgecolor='none')
    
    print("‚úÖ –ì—Ä–∞—Ñ–∏–∫ –≤—Ä–µ–º–µ–Ω–Ω–æ–π —à–∫–∞–ª—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∫–∞–∫ 'progress_timeline.png'")
    return fig

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üé® –°–û–ó–î–ê–ù–ò–ï –ì–†–ê–§–ò–ö–û–í –†–ï–ó–£–õ–¨–¢–ê–¢–û–í...")
    print("="*60)
    
    # –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –≥—Ä–∞—Ñ–∏–∫
    fig1 = create_comprehensive_visualization()
    plt.show()
    
    print("\nüìà –°–û–ó–î–ê–ù–ò–ï –ì–†–ê–§–ò–ö–ê –ü–†–û–ì–†–ï–°–°–ê...")
    fig2 = create_progress_timeline()
    plt.show()
    
    print("\nüéâ –í–°–ï –ì–†–ê–§–ò–ö–ò –°–û–ó–î–ê–ù–´!")
    print("üìÅ –§–∞–π–ª—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã:")
    print("   - comprehensive_results_analysis.png")
    print("   - progress_timeline.png")

if __name__ == "__main__":
    main() 