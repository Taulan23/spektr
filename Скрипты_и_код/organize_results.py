#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–û–†–ì–ê–ù–ò–ó–ê–¶–ò–Ø –†–ï–ó–£–õ–¨–¢–ê–¢–û–í –ü–û –ü–ê–ü–ö–ê–ú
"""

import os
import shutil
import glob
from datetime import datetime

def organize_results():
    """–û—Ä–≥–∞–Ω–∏–∑—É–µ—Ç –≤—Å–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º –ø–∞–ø–∫–∞–º"""
    
    print("üìÅ –û–†–ì–ê–ù–ò–ó–ê–¶–ò–Ø –†–ï–ó–£–õ–¨–¢–ê–¢–û–í –ü–û –ü–ê–ü–ö–ê–ú")
    print("=" * 60)
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫–∏ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    os.makedirs("results_alexnet_20_species", exist_ok=True)
    os.makedirs("results_extra_trees_20_species", exist_ok=True)
    
    moved_files = {"alexnet": [], "extra_trees": []}
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã –≤ —Ç–µ–∫—É—â–µ–π –ø–∞–ø–∫–µ
    all_files = os.listdir(".")
    
    for file in all_files:
        if os.path.isfile(file):
            # –§–∞–π–ª—ã –¥–ª—è –ø–∞–ø–∫–∏ Alexnet
            if any(pattern in file.lower() for pattern in [
                "alexnet_20", "best_alexnet_20", "1d_alexnet", 
                "create_confusion_matrices_png", "create_normalized",
                "extract_alexnet", "quick_parameters", "detailed_network"
            ]):
                if not file.startswith("results_"):  # –ò–∑–±–µ–≥–∞–µ–º –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –ø–∞–ø–æ–∫
                    try:
                        dest_path = os.path.join("results_alexnet_20_species", file)
                        if not os.path.exists(dest_path):  # –ò–∑–±–µ–≥–∞–µ–º –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∏
                            shutil.move(file, dest_path)
                            moved_files["alexnet"].append(file)
                            print(f"   üèÜ Alexnet: {file}")
                    except Exception as e:
                        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è {file}: {e}")
            
            # –§–∞–π–ª—ã –¥–ª—è –ø–∞–ø–∫–∏ Extra Trees
            elif any(pattern in file.lower() for pattern in [
                "extra_trees_20", "tree_classification"
            ]):
                if not file.startswith("results_"):
                    try:
                        dest_path = os.path.join("results_extra_trees_20_species", file)
                        if not os.path.exists(dest_path):
                            shutil.move(file, dest_path)
                            moved_files["extra_trees"].append(file)
                            print(f"   üå≥ Extra Trees: {file}")
                    except Exception as e:
                        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è {file}: {e}")
    
    print(f"\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–ï–†–ï–ú–ï–©–ï–ù–ò–ô:")
    print(f"   üèÜ Alexnet: {len(moved_files['alexnet'])} —Ñ–∞–π–ª–æ–≤")
    print(f"   üå≥ Extra Trees: {len(moved_files['extra_trees'])} —Ñ–∞–π–ª–æ–≤")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–ø–æ–∫
    print(f"\nüìÅ –°–û–î–ï–†–ñ–ò–ú–û–ï –ü–ê–ü–û–ö:")
    
    alexnet_files = os.listdir("results_alexnet_20_species")
    print(f"   üèÜ results_alexnet_20_species: {len(alexnet_files)} —Ñ–∞–π–ª–æ–≤")
    
    extra_trees_files = os.listdir("results_extra_trees_20_species")
    print(f"   üå≥ results_extra_trees_20_species: {len(extra_trees_files)} —Ñ–∞–π–ª–æ–≤")
    
    return moved_files

def create_summary_report():
    """–°–æ–∑–¥–∞–µ—Ç —Å–≤–æ–¥–Ω—ã–π –æ—Ç—á–µ—Ç –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º"""
    
    print("\nüìã –°–û–ó–î–ê–ù–ò–ï –°–í–û–î–ù–û–ì–û –û–¢–ß–ï–¢–ê...")
    
    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
    report_filename = f"summary_report_{timestamp}.txt"
    
    with open(report_filename, 'w', encoding='utf-8') as f:
        f.write("–°–í–û–î–ù–´–ô –û–¢–ß–ï–¢ –ü–û –†–ï–ó–£–õ–¨–¢–ê–¢–ê–ú –ö–õ–ê–°–°–ò–§–ò–ö–ê–¶–ò–ò 20 –í–ò–î–û–í –î–ï–†–ï–í–¨–ï–í\n")
        f.write("=" * 80 + "\n\n")
        
        f.write("1. ALEXNET 1D - –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ù–ï–ô–†–û–ù–ù–û–ô –°–ï–¢–ò\n")
        f.write("-" * 50 + "\n")
        f.write("–¢–æ—á–Ω–æ—Å—Ç—å –ø–æ —É—Ä–æ–≤–Ω—è–º —à—É–º–∞:\n")
        f.write("  0% —à—É–º–∞:  99.3% (–æ—Ç–ª–∏—á–Ω–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å)\n")
        f.write("  1% —à—É–º–∞:  97.2% (–≤—ã—Å–æ–∫–∞—è —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å)\n")
        f.write("  5% —à—É–º–∞:  64.8% (—É–º–µ—Ä–µ–Ω–Ω–∞—è —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å)\n")
        f.write("  10% —à—É–º–∞: 33.7% (–Ω–∏–∑–∫–∞—è —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å)\n")
        f.write("  20% —à—É–º–∞: 12.3% (–∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –¥–µ–≥—Ä–∞–¥–∞—Ü–∏—è)\n\n")
        
        f.write("–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ Alexnet 1D:\n")
        f.write("  ‚úì –í—ã—Å–æ—á–∞–π—à–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å –Ω–∞ —á–∏—Å—Ç—ã—Ö –¥–∞–Ω–Ω—ã—Ö\n")
        f.write("  ‚úì –•–æ—Ä–æ—à–∞—è —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å –∫ —Å–ª–∞–±–æ–º—É —à—É–º—É (1%)\n")
        f.write("  ‚úì –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤\n")
        f.write("  ‚úì –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤–µ—Ç–≤–∏ –¥–ª—è –≥—Ä—É–ø–ø –≤–∏–¥–æ–≤\n\n")
        
        f.write("2. EXTRA TREES - –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ê–ù–°–ê–ú–ë–õ–ï–í–û–ì–û –ú–ï–¢–û–î–ê\n")
        f.write("-" * 50 + "\n")
        f.write("–ë—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∞–ª–∏–∑–∞...\n\n")
        
        f.write("3. –°–¢–†–£–ö–¢–£–†–ê –ü–ê–ü–û–ö\n")
        f.write("-" * 50 + "\n")
        f.write("results_alexnet_20_species/     - –í—Å–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–µ–π—Ä–æ–Ω–Ω–æ–π —Å–µ—Ç–∏\n")
        f.write("results_extra_trees_20_species/ - –í—Å–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω—Å–∞–º–±–ª—è –¥–µ—Ä–µ–≤—å–µ–≤\n\n")
        
        f.write("4. –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò\n")
        f.write("-" * 50 + "\n")
        f.write("–î–ª—è –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è:\n")
        f.write("  ‚Ä¢ –ü—Ä–∏ –Ω–∏–∑–∫–æ–º —É—Ä–æ–≤–Ω–µ —à—É–º–∞ (‚â§1%): –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Alexnet 1D\n")
        f.write("  ‚Ä¢ –ü—Ä–∏ –≤—ã—Å–æ–∫–æ–º —É—Ä–æ–≤–Ω–µ —à—É–º–∞ (>5%): –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Extra Trees\n")
        f.write("  ‚Ä¢ –î–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏: –∞–Ω—Å–∞–º–±–ª—å –æ–±–µ–∏—Ö –º–æ–¥–µ–ª–µ–π\n\n")
        
        f.write(f"–û—Ç—á–µ—Ç —Å–æ–∑–¥–∞–Ω: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n")
    
    print(f"   ‚úÖ –û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {report_filename}")
    return report_filename

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    
    print("üóÇÔ∏è" * 60)
    print("üóÇÔ∏è –û–†–ì–ê–ù–ò–ó–ê–¶–ò–Ø –†–ï–ó–£–õ–¨–¢–ê–¢–û–í –ö–õ–ê–°–°–ò–§–ò–ö–ê–¶–ò–ò 20 –í–ò–î–û–í")
    print("üóÇÔ∏è" * 60)
    
    # –û—Ä–≥–∞–Ω–∏–∑—É–µ–º —Ñ–∞–π–ª—ã –ø–æ –ø–∞–ø–∫–∞–º
    moved_files = organize_results()
    
    # –°–æ–∑–¥–∞–µ–º —Å–≤–æ–¥–Ω—ã–π –æ—Ç—á–µ—Ç
    report_file = create_summary_report()
    
    print(f"\nüéâ –û–†–ì–ê–ù–ò–ó–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê!")
    print(f"üìÅ –ü–∞–ø–∫–∏:")
    print(f"   üèÜ results_alexnet_20_species/")
    print(f"   üå≥ results_extra_trees_20_species/")
    print(f"üìã –û—Ç—á–µ—Ç: {report_file}")
    
    print(f"\n‚ú® –í—Å–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–∫–∫—É—Ä–∞—Ç–Ω–æ –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω—ã –ø–æ –ø–∞–ø–∫–∞–º!")

if __name__ == "__main__":
    main() 