#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü–û–õ–ù–´–ô –ê–ù–ê–õ–ò–ó –§–ê–ô–õ–ê et80_10.xlsx
"""

import pandas as pd
import numpy as np

def analyze_et80_10_complete():
    """–ü–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Ñ–∞–π–ª–∞ et80_10.xlsx"""
    
    print("="*80)
    print("üìä –ü–û–õ–ù–´–ô –ê–ù–ê–õ–ò–ó –§–ê–ô–õ–ê et80_10.xlsx")
    print("="*80)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª
    df = pd.read_excel('et80_10.xlsx')
    
    print(f"üìã –°–¢–†–£–ö–¢–£–†–ê –§–ê–ô–õ–ê:")
    print(f"   ‚Ä¢ –†–∞–∑–º–µ—Ä: {df.shape}")
    print(f"   ‚Ä¢ –°—Ç—Ä–æ–∫: {len(df)}")
    print(f"   ‚Ä¢ –°—Ç–æ–ª–±—Ü–æ–≤: {len(df.columns)}")
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
    print(f"\nüìã –ó–ê–ì–û–õ–û–í–ö–ò –§–ê–ô–õ–ê:")
    for i in range(min(10, len(df))):
        if pd.notna(df.iloc[i, 0]):
            print(f"   ‚Ä¢ –°—Ç—Ä–æ–∫–∞ {i}: {df.iloc[i, 0]}")
    
    # –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Å—Ç–æ–ª–±—Ü–æ–≤ (—Å—Ç—Ä–æ–∫–∞ 8)
    headers = df.iloc[8, 1:].values
    print(f"\nüìã –ó–ê–ì–û–õ–û–í–ö–ò –°–¢–û–õ–ë–¶–û–í:")
    for i, header in enumerate(headers):
        if pd.notna(header):
            print(f"   ‚Ä¢ –°—Ç–æ–ª–±–µ—Ü {i+1}: {header}")
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
    print(f"\nüìä –ê–ù–ê–õ–ò–ó –î–ê–ù–ù–´–•:")
    
    # –î–∞–Ω–Ω—ã–µ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å–æ —Å—Ç—Ä–æ–∫–∏ 9
    data_start = 9
    
    # –°—á–∏—Ç–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—Ä–∞–∑—Ü–æ–≤
    total_samples = 0
    for i in range(data_start, len(df)):
        if any(pd.notna(val) for val in df.iloc[i, 1:].values):
            total_samples += 1
    
    print(f"   ‚Ä¢ –í—Å–µ–≥–æ –æ–±—Ä–∞–∑—Ü–æ–≤: {total_samples}")
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏
    print(f"\nüìà –ê–ù–ê–õ–ò–ó –ü–†–ê–í–ò–õ–¨–ù–´–• –ö–õ–ê–°–°–ò–§–ò–ö–ê–¶–ò–ô:")
    
    # –°—á–∏—Ç–∞–µ–º –µ–¥–∏–Ω–∏—Ü—ã –≤ –∫–∞–∂–¥–æ–º —Å—Ç–æ–ª–±—Ü–µ
    correct_by_column = {}
    for j in range(1, len(df.columns)):
        column_name = headers[j-1] if pd.notna(headers[j-1]) else f"–°—Ç–æ–ª–±–µ—Ü {j}"
        ones_count = 0
        
        for i in range(data_start, len(df)):
            if pd.notna(df.iloc[i, j]) and df.iloc[i, j] == 1:
                ones_count += 1
        
        correct_by_column[column_name] = ones_count
        print(f"   ‚Ä¢ {column_name}: {ones_count} –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–π")
    
    # –í—ã—á–∏—Å–ª—è–µ–º –æ–±—â—É—é —Ç–æ—á–Ω–æ—Å—Ç—å
    total_correct = sum(correct_by_column.values())
    overall_accuracy = total_correct / total_samples * 100 if total_samples > 0 else 0
    
    print(f"\nüéØ –û–ë–©–ê–Ø –¢–û–ß–ù–û–°–¢–¨: {total_correct}/{total_samples} ({overall_accuracy:.1f}%)")
    
    # –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –Ω–∞—à–∏–º–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
    print(f"\nüìä –°–†–ê–í–ù–ï–ù–ò–ï –° –ù–ê–®–ò–ú–ò –†–ï–ó–£–õ–¨–¢–ê–¢–ê–ú–ò:")
    print(f"   ‚Ä¢ et80_10.xlsx: {overall_accuracy:.1f}%")
    print(f"   ‚Ä¢ –ù–∞—à–∞ –º–æ–¥–µ–ª—å (10% —à—É–º–∞): ~90.3%")
    print(f"   ‚Ä¢ –†–∞–∑–Ω–∏—Ü–∞: {overall_accuracy - 90.3:.1f}%")
    
    if overall_accuracy < 90.3:
        print(f"   ‚Ä¢ –í—ã–≤–æ–¥: –í —Ñ–∞–π–ª–µ et80_10.xlsx —Ç–æ—á–Ω–æ—Å—Ç—å –ù–ò–ñ–ï –Ω–∞ {90.3 - overall_accuracy:.1f}%")
        print(f"   ‚Ä¢ –≠—Ç–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç –≤–∞—à–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ –æ –±–æ–ª—å—à–æ–º –ø–∞–¥–µ–Ω–∏–∏ —Ç–æ—á–Ω–æ—Å—Ç–∏!")
    else:
        print(f"   ‚Ä¢ –í—ã–≤–æ–¥: –í —Ñ–∞–π–ª–µ et80_10.xlsx —Ç–æ—á–Ω–æ—Å—Ç—å –≤—ã—à–µ –Ω–∞ {overall_accuracy - 90.3:.1f}%")
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö
    print(f"\nüîç –î–ï–¢–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó –°–¢–†–£–ö–¢–£–†–´:")
    
    # –ü—Ä–æ–≤–µ—Ä–∏–º, –µ—Å—Ç—å –ª–∏ –Ω–∞–∑–≤–∞–Ω–∏—è –≤–∏–¥–æ–≤ –≤ –ø–µ—Ä–≤–æ–º —Å—Ç–æ–ª–±—Ü–µ
    species_in_first_col = []
    for i in range(data_start, len(df)):
        if pd.notna(df.iloc[i, 0]) and str(df.iloc[i, 0]).strip():
            species_in_first_col.append(str(df.iloc[i, 0]))
    
    print(f"   ‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏—è –≤–∏–¥–æ–≤ –≤ –ø–µ—Ä–≤–æ–º —Å—Ç–æ–ª–±—Ü–µ: {len(species_in_first_col)}")
    if species_in_first_col:
        print(f"   ‚Ä¢ –í–∏–¥—ã: {species_in_first_col[:5]}...")  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
    
    # –ü—Ä–æ–≤–µ—Ä–∏–º —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –µ–¥–∏–Ω–∏—Ü –ø–æ —Å—Ç–æ–ª–±—Ü–∞–º
    print(f"\nüìä –†–ê–°–ü–†–ï–î–ï–õ–ï–ù–ò–ï –ï–î–ò–ù–ò–¶ –ü–û –°–¢–û–õ–ë–¶–ê–ú:")
    for column_name, count in correct_by_column.items():
        percentage = count / total_samples * 100 if total_samples > 0 else 0
        print(f"   ‚Ä¢ {column_name}: {count} ({percentage:.1f}%)")
    
    print("="*80)

if __name__ == "__main__":
    analyze_et80_10_complete() 