import pandas as pd
import numpy as np

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª
df = pd.read_excel('et80_10.xlsx')

print("="*80)
print("üìä –ê–ù–ê–õ–ò–ó –§–ê–ô–õ–ê et80_10.xlsx")
print("="*80)

# –î–∞–Ω–Ω—ã–µ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å–æ —Å—Ç—Ä–æ–∫–∏ 9
data_start = 9

# –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Å—Ç–æ–ª–±—Ü–æ–≤ (—Å—Ç—Ä–æ–∫–∞ 8)
headers = df.iloc[8, 1:].values
print("üìã –ó–ê–ì–û–õ–û–í–ö–ò –°–¢–û–õ–ë–¶–û–í:")
for i, header in enumerate(headers):
    if pd.notna(header):
        print(f"   ‚Ä¢ –°—Ç–æ–ª–±–µ—Ü {i+1}: {header}")

# –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
print(f"\nüìä –ê–ù–ê–õ–ò–ó –î–ê–ù–ù–´–• (—Å—Ç—Ä–æ–∫–∏ {data_start}-{len(df)})")

# –°—á–∏—Ç–∞–µ–º –æ–±—Ä–∞–∑—Ü—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –≤–∏–¥–∞
species_data = {}
current_species = None
sample_count = 0

for i in range(data_start, len(df)):
    row = df.iloc[i, 1:].values
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—ã–π —Å—Ç–æ–ª–±–µ—Ü –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –≤–∏–¥–∞
    first_col = df.iloc[i, 0]
    if pd.notna(first_col) and str(first_col).strip():
        # –≠—Ç–æ –Ω–æ–≤—ã–π –≤–∏–¥
        if current_species:
            species_data[current_species] = sample_count
            print(f"   ‚Ä¢ {current_species}: {sample_count} –æ–±—Ä–∞–∑—Ü–æ–≤")
        
        current_species = str(first_col)
        sample_count = 0
    
    # –°—á–∏—Ç–∞–µ–º –æ–±—Ä–∞–∑—Ü—ã
    if any(pd.notna(val) for val in row):
        sample_count += 1

# –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–∏–¥
if current_species:
    species_data[current_species] = sample_count
    print(f"   ‚Ä¢ {current_species}: {sample_count} –æ–±—Ä–∞–∑—Ü–æ–≤")

# –¢–µ–ø–µ—Ä—å –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏
print(f"\nüìà –ê–ù–ê–õ–ò–ó –ü–†–ê–í–ò–õ–¨–ù–´–• –ö–õ–ê–°–°–ò–§–ò–ö–ê–¶–ò–ô:")

correct_classifications = {}
total_correct = 0
total_samples = 0

for species in species_data:
    correct_count = 0
    sample_count = species_data[species]
    
    # –ò—â–µ–º –∏–Ω–¥–µ–∫—Å —Å—Ç–æ–ª–±—Ü–∞ –¥–ª—è —ç—Ç–æ–≥–æ –≤–∏–¥–∞
    species_col_idx = None
    for i, header in enumerate(headers):
        if pd.notna(header) and species in str(header):
            species_col_idx = i + 1  # +1 –ø–æ—Ç–æ–º—É —á—Ç–æ –∏–Ω–¥–µ–∫—Å–∞—Ü–∏—è —Å 0
            break
    
    if species_col_idx is not None:
        # –°—á–∏—Ç–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏
        for i in range(data_start, len(df)):
            if pd.notna(df.iloc[i, 0]) and str(df.iloc[i, 0]).strip() == species:
                # –≠—Ç–æ –æ–±—Ä–∞–∑–µ—Ü –¥–∞–Ω–Ω–æ–≥–æ –≤–∏–¥–∞
                if pd.notna(df.iloc[i, species_col_idx]) and df.iloc[i, species_col_idx] == 1:
                    correct_count += 1
    
    correct_classifications[species] = correct_count
    accuracy = correct_count / sample_count * 100 if sample_count > 0 else 0
    
    print(f"   ‚Ä¢ {species}: {correct_count}/{sample_count} ({accuracy:.1f}%)")
    
    total_correct += correct_count
    total_samples += sample_count

# –û–±—â–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å
overall_accuracy = total_correct / total_samples * 100 if total_samples > 0 else 0
print(f"\nüéØ –û–ë–©–ê–Ø –¢–û–ß–ù–û–°–¢–¨: {total_correct}/{total_samples} ({overall_accuracy:.1f}%)")

# –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –Ω–∞—à–∏–º–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
print(f"\nüìä –°–†–ê–í–ù–ï–ù–ò–ï –° –ù–ê–®–ò–ú–ò –†–ï–ó–£–õ–¨–¢–ê–¢–ê–ú–ò:")
print(f"   ‚Ä¢ et80_10.xlsx: {overall_accuracy:.1f}%")
print(f"   ‚Ä¢ –ù–∞—à–∞ –º–æ–¥–µ–ª—å (10% —à—É–º–∞): ~90.3%")
print(f"   ‚Ä¢ –†–∞–∑–Ω–∏—Ü–∞: {overall_accuracy - 90.3:.1f}%")

if overall_accuracy < 90.3:
    print(f"   ‚Ä¢ –í—ã–≤–æ–¥: –í —Ñ–∞–π–ª–µ et80_10.xlsx —Ç–æ—á–Ω–æ—Å—Ç—å –ù–ò–ñ–ï –Ω–∞ {90.3 - overall_accuracy:.1f}%")
    print(f"   ‚Ä¢ –≠—Ç–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç –≤–∞—à–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ –æ –±–æ–ª—å—à–æ–º –ø–∞–¥–µ–Ω–∏–∏ —Ç–æ—á–Ω–æ—Å—Ç–∏!")
else:
    print(f"   ‚Ä¢ –í—ã–≤–æ–¥: –í —Ñ–∞–π–ª–µ et80_10.xlsx —Ç–æ—á–Ω–æ—Å—Ç—å –≤—ã—à–µ –Ω–∞ {overall_accuracy - 90.3:.1f}%")

print("="*80) 